--[[ 
    HexWare – Combat Surf (Silent-Aim + ESP + Wall-Bang) with R15 support
    Author: @0nehex, mod: ChatGPT | Updated: 2025-08-06
]]

---------------------------------------------------------------------
-- ▶ SERVICES
---------------------------------------------------------------------
local Players     = game:GetService("Players")
local RunService  = game:GetService("RunService")
local UserInput   = game:GetService("UserInputService")
local Camera      = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

---------------------------------------------------------------------
-- ▶ GLOBAL FLAGS
---------------------------------------------------------------------
_G.HeadSize          = 20
_G.HitboxEnabled     = false
_G.HighlightEnabled  = false
_G.TracerEnabled     = false
_G.SkeletonEnabled   = false
_G.SilentAimEnabled  = false
_G.WallbangEnabled   = _G.WallbangEnabled or false
_G.FOVRadius         = _G.FOVRadius or 100
_G.UIPosition        = _G.UIPosition or UDim2.new(0.5,-210,0.5,-180)
_G.SelectedBone      = _G.SelectedBone or "Head"
_G.UIMinimized       = _G.UIMinimized or false

---------------------------------------------------------------------
-- ▶ ESP STORAGE
---------------------------------------------------------------------
local highlights, tracerLines, skeletonLines = {}, {}, {}

---------------------------------------------------------------------
-- ▶ FOV CIRCLE & CURRENT TARGET
---------------------------------------------------------------------
local fovCircle = Drawing.new("Circle")
fovCircle.Thickness = 1
fovCircle.Color     = Color3.new(1,1,1)
fovCircle.Radius    = _G.FOVRadius
fovCircle.Filled    = false
fovCircle.Visible   = false

local target

---------------------------------------------------------------------
-- ▶ RIG-TYPE DETECTION & BONE LISTS
---------------------------------------------------------------------
local function isR15(character)
    local hum = character:FindFirstChildOfClass("Humanoid")
    return hum and hum.RigType == Enum.HumanoidRigType.R15
end

local boneDefsR6 = {
    Head         = {label="Head"},
    Torso        = {label="Torso"},
    ["Left Arm"]  = {label="Left Arm"},
    ["Right Arm"] = {label="Right Arm"},
    ["Left Leg"]  = {label="Left Leg"},
    ["Right Leg"] = {label="Right Leg"},
}

local boneDefsR15 = {
    Head             = {label="Head"},
    UpperTorso       = {label="UpperTorso"},
    LowerTorso       = {label="LowerTorso"},
    LeftUpperArm     = {label="LeftUpperArm"},
    RightUpperArm    = {label="RightUpperArm"},
    LeftLowerArm     = {label="LeftLowerArm"},
    RightLowerArm    = {label="RightLowerArm"},
    LeftUpperLeg     = {label="LeftUpperLeg"},
    RightUpperLeg    = {label="RightUpperLeg"},
    LeftLowerLeg     = {label="LeftLowerLeg"},
    RightLowerLeg    = {label="RightLowerLeg"},
}

---------------------------------------------------------------------
-- ▶ SILENT-AIM / WALL-BANG RAYCAST HOOK
---------------------------------------------------------------------
do
    local mt          = getrawmetatable(game)
    local oldNamecall = mt.__namecall
    setreadonly(mt,false)
    mt.__namecall = function(self,...)
        local method = getnamecallmethod()
        if method == "Raycast" and self == workspace and _G.SilentAimEnabled and target then
            local args = {...}
            local origin, dir = args[1], args[2]
            args[2] = (target.Position - origin).Unit * dir.Magnitude
            if _G.WallbangEnabled then
                local rp = RaycastParams.new()
                rp.FilterType = Enum.RaycastFilterType.Whitelist
                rp.FilterDescendantsInstances = {target}
                rp.IgnoreWater = true
                args[3] = rp
            end
            return oldNamecall(self, unpack(args))
        end
        return oldNamecall(self, ...)
    end
    setreadonly(mt,true)
end

---------------------------------------------------------------------
-- ▶ ESP HELPERS (unchanged)
---------------------------------------------------------------------
local function addHighlight(plr)
    if highlights[plr] then highlights[plr]:Destroy() end
    local c = plr.Character
    if not c then return end
    local h = Instance.new("Highlight", c)
    h.FillColor    = Color3.fromRGB(0,170,255)
    h.OutlineColor = Color3.fromRGB(255,255,255)
    highlights[plr] = h
end
local function removeHighlight(plr)
    if highlights[plr] then highlights[plr]:Destroy(); highlights[plr]=nil end
end
local function addTracer(plr)
    if tracerLines[plr] then return end
    local ln = Drawing.new("Line")
    ln.Thickness, ln.Color, ln.Visible = 1, Color3.new(1,1,1), true
    tracerLines[plr] = ln
end
local function removeTracer(plr)
    if tracerLines[plr] then tracerLines[plr]:Remove(); tracerLines[plr]=nil end
end
local function addSkeleton(plr)
    if skeletonLines[plr] then for _,ln in ipairs(skeletonLines[plr]) do ln:Remove() end end
    skeletonLines[plr] = {}
    for i=1,5 do
        local ln = Drawing.new("Line")
        ln.Thickness, ln.Color, ln.Visible = 1, Color3.new(1,1,1), true
        table.insert(skeletonLines[plr], ln)
    end
end
local function removeSkeleton(plr)
    if skeletonLines[plr] then
        for _,ln in ipairs(skeletonLines[plr]) do ln:Remove() end
        skeletonLines[plr] = nil
    end
end
local function hookPlayer(plr)
    plr.CharacterAdded:Connect(function()
        if _G.HighlightEnabled then addHighlight(plr) end
    end)
    plr.CharacterRemoving:Connect(function()
        removeHighlight(plr); removeTracer(plr); removeSkeleton(plr)
    end)
end
for _,p in ipairs(Players:GetPlayers()) do hookPlayer(p) end
Players.PlayerAdded:Connect(hookPlayer)

---------------------------------------------------------------------
-- ▶ RENDER-STEPPED LOOP
---------------------------------------------------------------------
RunService.RenderStepped:Connect(function()
    -- FOV
    fovCircle.Position = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
    fovCircle.Radius   = _G.FOVRadius
    fovCircle.Visible  = _G.SilentAimEnabled

    -- pick target
    local nearest, best = nil, math.huge
    if _G.SilentAimEnabled then
        for _,plr in ipairs(Players:GetPlayers()) do
            if plr~=LocalPlayer and plr.Character then
                local rigMap = isR15(plr.Character) and boneDefsR15 or boneDefsR6
                local bone = plr.Character:FindFirstChild(_G.SelectedBone)
                if bone then
                    local p2d,on = Camera:WorldToViewportPoint(bone.Position)
                    if on then
                        local d = (Vector2.new(p2d.X,p2d.Y)-Vector2.new(Camera.ViewportSize.X/2,Camera.ViewportSize.Y/2)).Magnitude
                        if d<=_G.FOVRadius and d<best then best,nearest=d,bone end
                    end
                end
            end
        end
    end
    target = nearest

    -- per-player ESP
    for _,plr in ipairs(Players:GetPlayers()) do
        if plr~=LocalPlayer and plr.Character then
            local c = plr.Character
            local hrp = c:FindFirstChild("HumanoidRootPart")
            -- Hitbox
            if hrp and _G.HitboxEnabled then
                pcall(function()
                    hrp.Size, hrp.Transparency = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize), 0.7
                    hrp.BrickColor, hrp.Material, hrp.CanCollide = BrickColor.new("Really blue"), Enum.Material.Neon, false
                end)
            end
            -- Tracer
            if _G.TracerEnabled then
                addTracer(plr)
                local ln=pcall and tracerLines[plr]
                local pos2d,on=Camera:WorldToViewportPoint(hrp.Position)
                if on then ln.From,ln.To,ln.Visible = Vector2.new(Camera.ViewportSize.X/2,Camera.ViewportSize.Y/2), Vector2.new(pos2d.X,pos2d.Y), true
                else ln.Visible=false end
            else removeTracer(plr) end
            -- Highlight
            if _G.HighlightEnabled then
                addHighlight(plr)
                highlights[plr].FillColor = (target and c:FindFirstChild(_G.SelectedBone)==target) and Color3.fromRGB(255,0,0) or Color3.fromRGB(0,170,255)
            else removeHighlight(plr) end
            -- Skeleton
            if _G.SkeletonEnabled then
                addSkeleton(plr)
                local pairs = isR15(c)
                    and {{"Head","UpperTorso"},{"LeftUpperArm","UpperTorso"},{"RightUpperArm","UpperTorso"},{"LeftUpperLeg","LowerTorso"},{"RightUpperLeg","LowerTorso"}}
                    or {{"Head","Torso"},{"Left Arm","Torso"},{"Right Arm","Torso"},{"Left Leg","Torso"},{"Right Leg","Torso"}}
                for i,pair in ipairs(pairs) do
                    local a,b = c:FindFirstChild(pair[1]), c:FindFirstChild(pair[2])
                    local ln = skeletonLines[plr] and skeletonLines[plr][i]
                    if a and b and ln then
                        local a2d,onA=Camera:WorldToViewportPoint(a.Position)
                        local b2d,onB=Camera:WorldToViewportPoint(b.Position)
                        if onA and onB then ln.From,ln.To,ln.Visible = Vector2.new(a2d.X,a2d.Y),Vector2.new(b2d.X,b2d.Y),true
                        else ln.Visible=false end
                    end
                end
            else removeSkeleton(plr) end
        end
    end
end)

---------------------------------------------------------------------
-- ▶ UI CREATION
---------------------------------------------------------------------
local function createUI()
    local gui = LocalPlayer.PlayerGui:FindFirstChild("ESP_Toggle_GUI")
    if gui then gui:Destroy() end

    local guiNew = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
    guiNew.Name, guiNew.ResetOnSpawn = "ESP_Toggle_GUI", false

    local frame = Instance.new("Frame", guiNew)
    frame.Size, frame.Position = UDim2.new(0,420,0, _G.UIMinimized and 34 or 360), _G.UIPosition
    frame.BackgroundColor3, frame.BorderSizePixel = Color3.fromRGB(30,30,38), 0
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0,10)

    local header = Instance.new("Frame", frame)
    header.Size, header.BackgroundColor3, header.BorderSizePixel = UDim2.new(1,0,0,34), Color3.fromRGB(40,40,48), 0
    Instance.new("UICorner", header).CornerRadius=UDim.new(0,10)

    local title = Instance.new("TextLabel", header)
    title.Text, title.Font, title.TextSize = "HexWare – @0nehex  |  COMBAT SURF", Enum.Font.SourceSansSemibold, 18
    title.TextColor3, title.BackgroundTransparency = Color3.fromRGB(230,230,230), 1
    title.Size, title.Position, title.TextXAlignment = UDim2.new(1,-80,1,0), UDim2.new(0,12,0,0), Enum.TextXAlignment.Left

    local closeBtn = Instance.new("TextButton", header)
    closeBtn.Size, closeBtn.Position, closeBtn.Text, closeBtn.Font, closeBtn.TextSize = UDim2.new(0,28,0,28), UDim2.new(1,-32,0,3), "X", Enum.Font.SourceSansBold, 20
    closeBtn.TextColor3, closeBtn.BackgroundTransparency = Color3.new(1,1,1), 1
    closeBtn.MouseButton1Click:Connect(function() guiNew:Destroy() end)

    local minBtn = Instance.new("TextButton", header)
    minBtn.Size, minBtn.Position, minBtn.Text, minBtn.Font, minBtn.TextSize = UDim2.new(0,28,0,28), UDim2.new(1,-64,0,3), "-", Enum.Font.SourceSansBold, 20
    minBtn.TextColor3, minBtn.BackgroundTransparency = Color3.new(1,1,1), 1

    local content = Instance.new("Frame", frame)
    content.Size, content.Position, content.BackgroundTransparency = _G.UIMinimized and UDim2.new(1,0,0,0) or UDim2.new(1,0,1,-34), UDim2.new(0,0,0,34), 1
    content.Visible = not _G.UIMinimized

    -- left panel
    local leftPanel = Instance.new("Frame", content)
    leftPanel.Size, leftPanel.BackgroundColor3, leftPanel.BorderSizePixel = UDim2.new(0.35,0,1,0), Color3.fromRGB(28,28,36), 0
    Instance.new("UICorner", leftPanel).CornerRadius=UDim.new(0,8)
    Instance.new("UIPadding", leftPanel).PaddingTop = UDim.new(0,20)

    local listLayout = Instance.new("UIListLayout", leftPanel)
    listLayout.Padding, listLayout.SortOrder, listLayout.HorizontalAlignment = UDim.new(0,8), Enum.SortOrder.LayoutOrder, Enum.HorizontalAlignment.Center

    local toggles = {
        {flag="HitboxEnabled",    on="Enable Hit-Boxes",     off="Disable Hit-Boxes"},
        {flag="HighlightEnabled", on="Enable Highlight ESP", off="Disable Highlight ESP"},
        {flag="TracerEnabled",    on="Enable Tracer ESP",    off="Disable Tracer ESP"},
        {flag="SkeletonEnabled",  on="Enable Skeleton ESP",  off="Disable Skeleton ESP"},
        {flag="SilentAimEnabled", on="Enable Silent-Aim",    off="Disable Silent-Aim"},
        {flag="WallbangEnabled",  on="Enable Wall-Bang",     off="Disable Wall-Bang"},
    }
    for i,def in ipairs(toggles) do
        local btn = Instance.new("TextButton", leftPanel)
        btn.LayoutOrder, btn.Size, btn.Font, btn.TextSize = i, UDim2.new(0.9,0,0,36), Enum.Font.SourceSansBold, 16
        btn.TextColor3, btn.BackgroundColor3 = Color3.new(1,1,1), Color3.fromRGB(64,64,72)
        Instance.new("UICorner", btn).CornerRadius=UDim.new(0,6)
        local function refresh()
            if _G[def.flag] then
                btn.Text, btn.BackgroundColor3 = def.off, Color3.fromRGB(0,170,255)
            else
                btn.Text, btn.BackgroundColor3 = def.on, Color3.fromRGB(64,64,72)
            end
        end
        btn.MouseButton1Click:Connect(function() _G[def.flag]=not _G[def.flag]; refresh() end)
        refresh()
    end

    -- FOV slider
    local maxFov=300
    local sliderFrame=Instance.new("Frame", leftPanel)
    sliderFrame.LayoutOrder=#toggles+1; sliderFrame.Size=UDim2.new(0.9,0,0,45); sliderFrame.BackgroundTransparency=1
    local fovLabel=Instance.new("TextLabel", sliderFrame)
    fovLabel.Size, fovLabel.Text, fovLabel.Font, fovLabel.TextSize, fovLabel.BackgroundTransparency = UDim2.new(1,0,0,20), "FOV Radius: ".._G.FOVRadius, Enum.Font.SourceSans, 14, 1
    fovLabel.TextColor3 = Color3.fromRGB(230,230,230)
    local track=Instance.new("Frame", sliderFrame)
    track.Size, track.Position, track.BackgroundColor3 = UDim2.new(1,0,0,6), UDim2.new(0,0,1,-20), Color3.fromRGB(80,80,88)
    Instance.new("UICorner", track).CornerRadius=UDim.new(0,3)
    local knob=Instance.new("Frame", track)
    knob.Size, knob.BackgroundColor3 = UDim2.new(_G.FOVRadius/maxFov,0,1,0), Color3.fromRGB(0,170,255)
    Instance.new("UICorner", knob).CornerRadius=UDim.new(0,3)
    local dragging=false
    knob.InputBegan:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=true end end)
    knob.InputEnded:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end end)
    UserInput.InputChanged:Connect(function(i)
        if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then
            local absX,leftX,leftW=i.Position.X,track.AbsolutePosition.X,track.AbsoluteSize.X
            local rel=math.clamp((absX-leftX)/leftW,0,1)
            _G.FOVRadius=math.floor(rel*maxFov)
            knob.Size=UDim2.new(rel,0,1,0)
            fovLabel.Text="FOV Radius: ".._G.FOVRadius
        end
    end)

    -- right panel
    local rightPanel=Instance.new("Frame", content)
    rightPanel.Size, rightPanel.Position, rightPanel.BackgroundColor3, rightPanel.BorderSizePixel = UDim2.new(0.63,0,1,0), UDim2.new(0.37,0,0,0), Color3.fromRGB(24,24,32), 0
    Instance.new("UICorner", rightPanel).CornerRadius=UDim.new(0,8)

    local boneLabel=Instance.new("TextLabel", rightPanel)
    boneLabel.Text, boneLabel.Font, boneLabel.TextSize, boneLabel.TextColor3, boneLabel.BackgroundTransparency = "Select Bone", Enum.Font.SourceSansSemibold, 18, Color3.fromRGB(200,200,220), 1
    boneLabel.Size, boneLabel.Position = UDim2.new(1,0,0,30), UDim2.new(0,0,0,0)

    local rigMap = isR15(LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()) and boneDefsR15 or boneDefsR6
    local boneButtons = {}
    local function updateBoneButtons()
        for bone,btn in pairs(boneButtons) do
            if _G.SelectedBone==bone then btn.BackgroundColor3=Color3.fromRGB(0,170,255); btn.Text="✔"
            else btn.BackgroundColor3=Color3.fromRGB(64,64,72); btn.Text="" end
        end
    end

    local idx=0
    for bone,def in pairs(rigMap) do
        idx=idx+1
        local btn=Instance.new("TextButton", rightPanel)
        btn.Name, btn.Position, btn.Size = bone, UDim2.new(((idx-1)%3)/3,10,math.floor((idx-1)/3)*50+40,40), UDim2.new(0.3,-15,0,40)
        btn.BackgroundColor3, btn.BorderSizePixel, btn.Font, btn.TextSize = Color3.fromRGB(64,64,72),0,Enum.Font.SourceSansBold,18
        Instance.new("UICorner", btn).CornerRadius=UDim.new(0.3,0)
        btn.MouseButton1Click:Connect(function() _G.SelectedBone=bone; updateBoneButtons() end)
        boneButtons[bone]=btn
    end
    updateBoneButtons()

    -- minimise & drag
    minBtn.MouseButton1Click:Connect(function()
        _G.UIMinimized = not _G.UIMinimized
        createUI()
    end)
    local draggingHeader, dragInput, dragStart, startPos = false, nil, nil, nil
    header.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 then
            draggingHeader, dragStart, startPos = true, i.Position, frame.Position
            i.Changed:Connect(function() if i.UserInputState==Enum.UserInputState.End then draggingHeader=false end end)
        end
    end)
    header.InputChanged:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseMovement then dragInput=i end end)
    UserInput.InputChanged:Connect(function(i)
        if draggingHeader and i==dragInput then
            local delta=i.Position-dragStart
            frame.Position=UDim2.new(startPos.X.Scale, startPos.X.Offset+delta.X, startPos.Y.Scale, startPos.Y.Offset+delta.Y)
            _G.UIPosition=frame.Position
        end
    end)
end

---------------------------------------------------------------------
-- ▶ Initialise GUI
---------------------------------------------------------------------
createUI()
LocalPlayer.CharacterAdded:Connect(createUI)
